import java.io.*;
import java.util.*;
class $$$${
$$$$(){}
$$$$(Object $){
this.$+=$;
}
static $$$$ $(Object $){
return new $$$$($);
}
$$$$ $$$$$$$($$$$ $$){
return $().$$$$$$($$).___()?$$$$.$$:$$$$$$($$)
.$$$$$$$($$).$();
}
$$$$ $(){
return $$$$.$("S("+$+")");
}
$$$$ $$$(){
if(_$$.$($,$$$$.$$.$))return null;
$$$$ __$=$$$$.$$;
for(String $__:("0"+$
).split("\\(|0(\\)+|.)")){
if(!$__.isEmpty())__$=__$.$();
}
return __$;
}
$$$$ $$$$$($$$$ $$$){
return ___()||_$$.$($$$.$,$$$$.$$.$)
?$$$$.$$:$$$$($$$$$($$$.$$$()));
}
$$$$ $$$$$$($$$$ $$){
return _$$.$($$$$.$$.$,$$.$)?this:___()
?$$$$.$$:$$$().$$$$$$($$.$$$());
}
boolean $_$($$$$ $$) {
return _$$.$($,$$.$);
}
boolean $$_($$$$ $$) {
return $$$$$$($$).___()&&!$$.$$$$$$(this).___();
}
$$$$ $$$$$$$$($$$$ $$){
return $$$$$$($$$$$$$($$).$$$$$($$));
}
$$$$ $$$$($$$$ $$){
return _$$.$($$$$.$$.$,$$.$)?$$$$.$(
$):$$$$($$.$$$()).$();
}
String $$(){
return this.$;
}
String $="";
static $$$$ $$$$=$("S(0)");
static $$$$ $$=$$$$.$("0");
static $$$$ $$_$$=$(
"S(S(S(S(S(S(S(S(S(S(0))))))))))"
);
static $$$$ $$_$_=$$_$$.$$$$$($$_$$);
boolean ___(){return _$$.$($$$$.$$.$,$);}
int __(){
int $$=_$$.$$$;
if($$$()!=null&&$$--!=$$)
for(String $$$$:$.split(
"S|0.+"))
$$++;
return $$;
}
char _$_(){return(char)__();}
String $$$$$$$$$(String $$$){
$$$$ $$=$$$$.$$;
for(String $__:$$$.split(""))$$=$$.$();
String $$$_$="",$$_$$;
$$$$ _$$$$,$_$$$=this;
while(!$_$$$.$_$($$$$.$$)) {
_$$$$=$_$$$.$$$$$$$$($$);
$_$$$=$_$$$.$$$$$$$($$);
$$_$$=$$$;
while(!_$$$$.___()) {
$$_$$=$$_$$.replaceFirst("^.","");
_$$$$=_$$$$.$$$();
}
$$$_$=$$_$$.charAt($$$$.$$.__()) + $$$_$;
}
return $$$_$;
}
static $$$$ $__($$$$ $$$,$$$$ $$){
return $($$$.$+","+$$.$);
}
}
class $$${
$$$(){$=$$$$.$("");$$$$$=$$$$.$$;}
void $$($$$$ $$){
if(!$$$$$.___())$.$+=",";
$$$$$=$$$$$.$();
$.$+=$$.$;
}
String __$$(String __) {
String $$$_="";
for($$$$ $_$=$$$$.$$;!$_$.$_$($$$$$);$_$=$_$.$())
$$$_+=$$$$$$($_$).$$$$$$$$$(__);
return $$$_;
}
static $$$ $($$$$...$$){
$$$ $$$$$=new $$$();
for($$$$ $$$$:$$){
$$$$$.$$($$$$);
}
return $$$$$;
}
void $_$_$($$$ $$){
$=$$.$;$$$$$=$$.$$$$$;
}
String __$() {
String $$$_="";
for($$$$ $_$=$$$$.$$;!$_$.$_$($$$$$);$_$=$_$.$())
$$$_+=$$$$$$($_$)._$_();
return $$$_;
}
$$$$ $$$$$$($$$$ $$){
$$$$ $_$=$$$$.$$;
for(String $:$.$.split(",")){
if($_$.$_$($$)) {
$_$=$$$$.$($);
break;
}
$_$=$_$.$();
}
return $_$;
}
$$$$ $,$$$$$;
void $$$$$$$($$$$ $$,$$$$ $$_){
$$$$ $_$=$$$$.$$;
$$$ ____=$$$.$();
for(String $:$.$.split(",")){
____.$$($_$.$_$($$)?$$_:$$$$.$($));
$_$=$_$.$();
}
$_$_$(____);
}
$$$ __(){$$$ $$=$$$.$();$$.$=$;return $$;}
$$$$[]$$$$(){
$$$$[]$$=new $$$$[$$$$$.__()];
$$$$ $$$=$$$$.$$;
for(String $:$.$.split(",")){
$$[$$$.__()]=$$$$.$($);
$$$=$$$.$();
}
return $$;
}
}
class _$${
static int $$$=0;
static boolean $(String $,String $$){
return $.equals($$);
}
static $$$$ $$(String $){
$$$$ $$$=$$$$.$$;
if($.isEmpty())return $$$;
for(String $$:$.split(""))$$$=$$$.$();
return $$$;
}
static int $$$$$$=1;
}
interface ${
static void ___(Object $){System.out.print($);
System.out.flush();}
static void main(String[]__)throws Exception{
$$$$ _$$$$$$=$$$$.$$_$_.$$$$($$$$.$$$$),
_$$$$$_=$$$$.$$_$_.$$$$$$($$$$.$$$$),
_$$$$_$=$$$$.$$_$_.$$$$($$$$.$$_$$),
_$$$$__=_$$$$$$.$$$$($$$$.$$$$.$()),
_$$$_$$=_$$$$_$.$$$$($$$$.$$$$.$()),
_$$$_$_=_$$$$$_.$$$$$$($$$$.$$$$.$()),
_$$$__$=$$$$.$$_$_.
$$$$$$($$$$.$$_$$).
$$$$$($$$$.$$$$.$()),
_$$$___=$$$$.$$_$_.$$$$$$$($$$$.$$$$.$()),
_$$_$$$=$$$$.$$_$_.$$$$$$($$$$.$$_$$
).$$$$$$$($$$$.$$$$.$()),
_$$_$$_=$$$$.$$_$$.$().$$$$$($$$$.$$_$$.$()),
_$$_$_$=$$$$.$$_$_.$$$$($$$$.$$_$$.$()),
_$$_$__=$$$$.$$_$_.$$$$$$
($$$$.$$_$$).$$$$$$($$$$.$$_$$.$()),
_$$__$$=_$$$$$$.$$$$$$($$$$.$$_$$),
_$$__$_=_$$$$$$.$$$$$$($$$$.$$_$$.$$$$($$$$.$$_$$)),
_$$___$=$$$$.$$_$_.$$$$($$$$.$$_$$.$$$()),
_$$____=$$$$.$$_$$.$$$$($$$$.$$_$$.$$$$($$$$.$$_$$)),
_$_$$$$=$$$$.$$_$_.$$$$$$(
$$$$.$$_$$.$$$$($$$$.$$_$$)),
_$_$$$_=_$$$$$$.$$$$($$$$.$$$$.$().$()),
_$_$$_$=$$$$.$$_$$.$$$$($$$$.$$_$$).$$$$
($$$$.$$$$.$().$()),
_$_$$__=$$$$.$$$$.$$$$(_$$$$$$
).$$$$($$$$.$$$$.$().$()),
_$_$_$$=$$$$.$$_$$.$().$$$$$($$$$.$$$$.$())
.$$$$($$$$.$$$$.$().$()),
_$_$_$_=_$$$_$$.$$$$($$$$.$$$$.$().$()),
_$_$__$=_$$$__$.$$$$($$$$.$$$$.$().$()),
_$_$___=_$$$$$_.$$$$$$$($$$$.$$$$.$()).
$$$$($$$$.$$$$.$().$()),
_$__$$$=_$$$$_$.$$$$$$$($$$$.$$$$.$())
.$$$$($$$$.$$$$.$().$()),
_$__$$_=_$$_$_$.$$$$($$$$.$$$$.$().$()),
_$__$_$=$$$$.$$_$_.$$$$(_$$$$$$)
.$$$$($$$$.$$$$.$().$()),
_$__$__=_$$__$$.$$$$($$$$.$$$$.$().$()),
_$___$$=$$$$.$$_$$.$$$$($$$$.$$_$$).$$$$(
$$$$.$$_$$.$$$()).$$$$($$$$.$$$$.$().$()),
_$___$_=_$$____.$$$$($$$$.$$$$.$().$()),
_$____$=_$$$$$_.$$$$$$($$$$.$$$$.$().$()),
_$_____=_$$$$$_.$$$$$$($$$$.$$_$$.$())
.$$$$$$($$$$.$$$$.$().$()),
__$$$$$=_$$$$$_.$$$$$$$($$$$.$$$$.$()).
$$$$$$($$$$.$$$$.$().$()),
__$$$$_=_$$$$_$.$$$$($$$$.$$_$$.$$$())
.$$$$$$($$$$.$$$$.$().$()),
__$$$_$=$$$$.$$_$$.$$$$(_$$$$_$)
.$$$$$$($$$$.$$$$.$().$()),
__$$$__=_$$$$_$.$$$$($$$$.$$_$$.$$$$(
$$$$.$$_$$)).$$$$$$($$$$.$$$$.$().$()),
__$$_$$=$$$$.$$_$_.$$$$($$$$.$$_$_).
$$$$(_$$$$_$).$$$$$$($$$$.$$$$.$().$()),
__$$_$_=$$$$.$$_$$.$().$$$$($$$$.$$$$.$())
.$$$$$($$$$.$$$$.$().$()),
__$$__$=_$$_$$_.$$$$$$$($$$$.$$$$.$().$())
.$$$$($$$$.$$$$.$().$().$()),
__$$___=$$$$.$$_$_.$$$$(_$$$$_$)
.$$$$$$$($$$$.$$$$.$().$())
.$$$$($$$$.$$$$.$().$().$()),
__$_$$$=_$$_$$$.$$$$$$($$$$.$$$$.$().$().$()),
__$_$$_=$$$$.$$_$$.$$$()
.$$$$$($$$$.$$$$.$()).$$$$$($$$$.$$$$.$().$().$
()),
__$_$_$=_$$$$$_
.$$$$$$$($$$$.$$$$.$()).$$$$($$$$.$$_$$.$().$()),
__$_$__=_$_$$$$.$$$$$$($$$$.$$_$$.$().$()),
__$__$$=_$$$___.$$$$(_$$$$$_.$$$$$$($$$$.$$$$)),
__$__$_=__$$$__.$$$$$$($$$$.$$_$_),
__$___$=_$$$$_$.$$$$($$$$.$$_$_),
__$____=__$$$$$.$$$().$$$();
String $$$$$$$$$$=$$$.$(
__$$$$$,_$___$$,_$$_$__).__$(),
$$$$$$$$$$$=$$$.$(_$__$_$,__$_$_$
,__$$$__,_$__$$$,
__$$_$_,_$$___$,__$_$$$,_$$____,
_$__$__,__$$__$,_$_____,
__$_$__,_$_$$_$,_$$___$,_$$_$$$,
_$_$__$,_$___$_,_$$__$_,
_$_$___,__$__$$,__$$_$$,__$_$$$,
_$_$_$$,__$_$$$,_$$$__$)
.__$$($$$.$(_$___$$,_$___$$,__$$$$_,_$$$$$$,_$$$$_$,
_$$_$_$,_$__$$_,_$_$_$_,_$_$$__,_$$_$$_,_$$$_$$,
_$_$$$$,_$$$$$_,__$$$_$,__$$__$,_$$$_$_,_$_$$$_
,_$$$$__).__$()),
______=$$$.$(__$$___,__$__$_,
_$$$___,_$$__$$,__$_$$_).__$(),
_$$$$$$_=__$___$.$$$$$$$$$(______),
$______$=__$____.$$$$$$$$$(______),
$$$$_$="";
boolean $$$$$$$$$$$$$=0<0,_$$$=!$$$$$$$$$$$$$;
try{
__[_$$.$$$$$$]=__[_$$.$$$$$$];
$$$$$$$$$$$$$=_$$$;
}
catch(Exception $$$$$$$$$$$$){}
$$$$ _$,_$_,$_;_$=$_=_$_=$$$$.$$;
$$$ $$__=$$$.$();
try(BufferedReader $__$=new BufferedReader(
new FileReader(__[_$$.$$$]))){
while((__[_$$.$$$]=$__$.readLine())!=null){
_$_=_$$.$$(__[_$$.$$$]);
if(_$.$$_(_$_))_$=_$_;
$$__.$$($$$$.$(__[_$$.$$$]));
$_=$_.$();
}
}
__[_$$.$$$]=$$$$_$;
for(String $$$$$:$$__.$.$.split(",")){
__[_$$.$$$]+=$$$$$;
_$_=_$.$$$$$$(_$$.$$($$$$$));
while(!_$_.___()) {
__[_$$.$$$]+=" ";
_$_=_$_.$$$();
}
}
$$__=$$$.$();
for(String $$$$$:__[_$$.$$$].split($$$$_$)){
_$_=$$$$.$$.$();
if(_$$.$($$$$$," ")||_$$.$($$$$$,__$$$$$._$_()
+$$$$_$))_$_=_$_.$$$(); 
$$__.$$(_$_);
}
Scanner $$$$$$$$=new Scanner(System.in);
if($$$$$$$$$$$$$) {
___(_$$$$$$_);
}
while(_$$$$$$_!=null&&$$$$$$$$$$$$$||_$$$) {
if($$$$$$$$$$$$$) {
___($______$);
}
$$$$ $$__$$=$$$$.$$.$().$();
$$$$ $$$___$$$=$$__$$.$();
$$$ $__$$=$$$.$();$__$$.$_$_$($$__);
for($$$$ $__=$$$$.$$; $__.$$_($_); $__=$__.$()) {
for($$$$ $$$_=$$$$.$$; $$$_.$$_(_$); $$$_=$$$_.$()) {
$$$$ $$_$=$__.$$$$$(_$).$$$$($$$_);
$$$$ $_$$=$$$$.$$;
if(!$__.___() && $$$_.$$_(_$))
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$$$().$$$$$$(_$)));
if($$$_.$$_(_$))
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$$$$$$(_$)));
if($$$_.$().$$_(_$))
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$().$$$$$$(_$)));
if(!$$$_.___())
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$$$()));
if($$$_.$().$$_(_$))
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$()));
if($__.$().$$_($_))
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$$$$(_$).$$$()));
if($__.$().$$_($_))
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$$$$(_$)));
if($__.$().$$_($_) && $$$_.$().$$_(_$))
$_$$=$_$$.$$$$($__$$.$$$$$$($$_$.$$$$(_$).$()));
if($__$$.$$$$$$($$_$).___()){
if($_$$.$_$($$$___$$$))
$$__.$$$$$$$($$_$,$$$$.$$.$());
}
else{
if(!($_$$.$_$($$__$$) || $_$$.$_$($$$___$$$)))
$$__.$$$$$$$($$_$,$$$$.$$);
}
$$$$ __$___=$__$$.$$$$$$($$_$);
___(__$___.$$$$(__$___).$$$$($$$$.$$.$().$().$())
.$$$$$$$$$($$$$$$$$$$));
}
__();
}
__();
if(!$$$$$$$$$$$$$)
try{__($$$$$$$$$$$);
if(!$$$$$$$$.nextLine().isEmpty())
break;}
catch(Exception $$$$$$$$$){break;}
}
}
static void __(Object $){___($+"\n");}
static void __(){__("");}
}